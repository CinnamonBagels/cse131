typedef bool TAM;
typedef funcptr : void () FUN;

structdef MYS {
    int x, y, z;
    float** u;
    funcptr : void () min;
    function : int herro (bool& tar) {
        return 1;
    }
};

function : void test(bool & hi, int** tarf) {

    int y;

    int* yu = &y;
    float* si = &y;
    &test; //error, non addressable

    int*** asd;
    int*** fff = &asd; //error, int**** not assignable to int***
    int**** fafs = &asd;

    TAM ta;
    float* ba = &ta; //error, TAM* not assignable to float*
    bool* bab = &ta;
    bool** babs = &bab;
    TAM** babe = &bab;

    &(&ta); //error, non addressable

    MYS mys;
    MYS* myt = &mys;
    int* b1 = &mys.x;
    float*** b2 = &mys.u;
    &mys.herro; //error, non addressable
    funcptr : void () * b3 = &mys.min;
    FUN* b4 = &mys.min;

    TAM* tad = &hi;
    asd = &tarf;
}